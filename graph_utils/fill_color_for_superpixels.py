import numpy as np
import matplotlib.pyplot as plt
from skimage.segmentation import mark_boundaries
from skimage.util import img_as_float
from skimage import io
import cv2
# imports Pil module
import PIL


# for i in range(1, 50):
#     print('\'{}\': ({},{},{},{}),'.format(i, 255, 255, 255, 255))
# seg7 = np.load(r'./segments/7_pro_segmentmap.npy')
# seg13 = np.load(r'./segments/13_pro_segmentmap.npy')
# seg24 = np.load(r'./segments/24_pro_segmentmap.npy')
seg49 = np.load(r'./segments/49_pro_segmentmap.npy')
# colormap RGBA
colormap7 = {
    '1': (67, 40, 231, 255),
    '2': (150, 84, 229, 255),
    '3': (255, 98, 131, 255),
    '4': (255, 136, 0, 255),
    '5': (255, 197, 2, 255),
    '6': (0, 125, 142, 255),
    '7': (26, 167, 238, 255)
}
colormap13 = {
    '1': (67, 40, 231, 255),
    '2': (150, 84, 229, 255),
    '3': (255, 98, 131, 255),
    '4': (67, 40, 231, 255),
    '5': (150, 84, 229, 255),
    '6': (255, 98, 131, 255),
    '7': (255, 136, 0, 255),
    '8': (255, 197, 2, 255),
    '9': (0, 125, 142, 255),
    '10': (255, 98, 131, 255),
    '11': (26, 167, 238, 255),
    '12': (26, 167, 238, 255),
    '13': (0, 125, 142, 255),
}
colormap24 = {
    '1': (67, 40, 231, 255),
    '2': (150, 84, 229, 255),
    '3': (67, 40, 231, 255),
    '4': (67, 40, 231, 255),
    '5': (255, 98, 131, 255),
    '6': (255, 98, 131, 255),
    '7': (255, 136, 0, 255),
    '8': (255, 197, 2, 255),
    '9': (0, 125, 142, 255),
    '10': (0, 125, 142, 255),
    '11': (255, 136, 0, 255),
    '12': (26, 167, 238, 255),
    '13': (41, 218, 228, 255),
    '14': (41, 218, 228, 255),
    '15': (136, 233, 154, 255),
    '16': (136, 233, 154, 255),
    '17': (1, 156, 0, 255),
    '18': (1, 156, 0, 255),
    '19': (193, 31, 31, 255),
    '20': (193, 31, 31, 255),
    '21': (115, 0, 0, 255),
    '22': (136, 233, 154, 255),
    '23': (0, 149, 255, 255),
    '24': (0, 149, 255, 255),
}
colormap49 = {
    '1': (67, 40, 231, 255),
    '2': (67, 40, 231, 255),
    '3': (150, 84, 229, 255),
    '4': (255, 98, 131, 255),
    '5': (255, 136, 0, 255),
    '6': (255, 136, 0, 255),
    '7': (150, 84, 229, 255),
    '8': (255, 98, 131, 255),
    '9': (255, 197, 2, 255),
    '10': (0, 125, 142, 255),
    '11': (26, 167, 238, 255),
    '12': (26, 167, 238, 255),
    '13': (41, 218, 228, 255),
    '14': (41, 218, 228, 255),
    '15': (255, 197, 2, 255),
    '16': (0, 125, 142, 255),
    '17': (136, 233, 154, 255),
    '18': (1, 156, 0, 255),
    '19': (1, 156, 0, 255),
    '20': (193, 31, 31, 255),
    '21': (115, 0, 0, 255),
    '22': (0, 149, 255, 255),
    '23': (91, 155, 15, 255),
    '24': (231, 79, 171, 255),
    '25': (136, 233, 154, 255),
    '26': (0, 166, 194, 255),
    '27': (0, 166, 194, 255),
    '28': (193, 31, 31, 255),
    '29': (192, 123, 1, 255),
    '30': (132, 126, 250, 255),
    '31': (115, 0, 0, 255),
    '32': (0, 149, 255, 255),
    '33': (91, 155, 15, 255),
    '34': (231, 79, 171, 255),
    '35': (0, 164, 86, 255),
    '36': (0, 164, 86, 255),
    '37': (241, 78, 107, 255),
    '38': (0, 158, 243, 255),
    '39': (192, 123, 1, 255),
    '40': (136, 146, 0, 255),
    '41': (136, 146, 0, 255),
    '42': (132, 126, 250, 255),
    '43': (207, 96, 208, 255),
    '44': (207, 96, 208, 255),
    '45': (0, 164, 86, 255),
    '46': (241, 78, 107, 255),
    '47': (0, 158, 243, 255),
    '48': (0, 167, 154, 255),
    '49': (0, 167, 154, 255),
}


r = np.ones((360, 360), dtype=np.uint8) * 255
g = np.ones((360, 360), dtype=np.uint8) * 255
b = np.ones((360, 360), dtype=np.uint8)
a = np.ones((360, 360), dtype=np.uint8) * 255
# image = cv2.merge([b, g, r, a])
# cv2.imshow('test', image)
# cv2.waitKey(0)


# fill color
segment = seg49
colormap = colormap49
for i in np.unique(segment):
    r[segment == i] = colormap[str(i)][0]
    g[segment == i] = colormap[str(i)][1]
    b[segment == i] = colormap[str(i)][2]
    a[segment == i] = colormap[str(i)][3]

    mask = cv2.merge([b, g, r, a])
    # cv2.imshow('mask'+str(i), mask)
    # cv2.waitKey(0)
    cv2.imwrite('mask49.png', mask)


# # show boundary
image = io.imread(r'mask49.png')
fig, ax = plt.subplots(constrained_layout=True)
image = img_as_float(image)
ax.imshow(mark_boundaries(image, segment, color=[255, 255, 0, 255]))
plt.axis("off")
plt.savefig('mask49-seg.png', dpi=600, bbox_inches='tight',
            pad_inches=0)
plt.show()
